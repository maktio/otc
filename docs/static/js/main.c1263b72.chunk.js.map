{"version":3,"sources":["component/oabi.js","component/common.js","component/utils/jsonrpc.js","component/language.js","component/auditing.js","component/consumer/corders.js","component/basepage.js","component/consumer/marketorders.js","component/business/placeorder.js","component/business/userorders.js","component/business/borders.js","App.js","serviceWorker.js","index.js"],"names":["B2B","require","config","name","contractAddress","github","author","url","document","location","href","logo","protocol","host","contract","serojs","callContract","rpc","JsonRpc","unitMap","Map","unitTokens","oAbi","this","init","Promise","resolve","reject","seropp","rest","unit","get","has","callback","getInfo","info","language","code0","Blake2B","code1","personal","input","slice","data","Buffer","from","p","alloc","fill","length","buf","update","digest","hex","i","push","toString","join","pk","pkr","pkrCrypto","pkrEncrypt","pkrDecrypt","code2","param","post","JSON","stringify","ret","console","log","state","pcMethods","getAccountDetail","item","PK","mainPKr","MainPKr","Name","balances","Balance","getAccountList","accounts","forEach","index","_method","_args","packData","callParams","to","address","call","callData","res","unPackDataEx","args","tokenName","value","executeData","gasPrice","BigNumber","cy","estimateParam","estimateGas","gas","error","fail","executeContract","pkrs","seroRpc","rets","self","callMethod","getFullAddress","result","code","id","bigToHex","flag","pcode","executeMethod","hcodes","hcode","lable","orderId","winRole","ecode","mcode","payType","big","minValue","maxValue","price","getDate","num","formatDate","time","Y","getFullYear","M","getMonth","d","h","getHours","m","getMinutes","bytes32ToToken","bytes","substring","String","fromCharCode","apply","showValue","val","decimal","decimalPlaces","trimNumber","dividedBy","pow","toFixed","showPK","len","numberStr","vals","split","charAt","numStr","_params","jsonrpc","method","params","axios","then","response","catch","cb","list","set","_lang","indexOf","localStorage","setItem","e","lang","getItem","zh_CN","en_US","be_BY","ja_JP","ko_KR","Date","getTimezoneOffset","text","change","modal","ok","cancel","button","kyc","title1","msg1","title2","title3","msg3","title4","order","buy","sell","amount","dealAmount","orderType","op","confirm","refuse","pass","tips1","tips2_0","tips2_1","tips2_3","tips2_4","tips3","tips4","tips5","tips6","tips7","tips8","tips9","tips10","tips11","tips12","tabBar","trade","assets","home","account","lastPrice","orderPrice","orderNum","available","openOrders","all","cancelAll","finished","canceled","total","volume","depth","locked","rechange","withdrawal","AuditingList","props","orderInfo","orders","codes","auditingList","setState","arbitrateOrders","status","map","Item","key","style","flex","overflow","textOverflow","whiteSpace","textAlign","onClick","alert","width","height","display","position","onPress","audited","ordersHtml","unitName","size","operation","executeArbitrate","border","paddingTop","className","type","placeholder","ref","el","orderIdValue","onChange","event","target","arbitrate","showStatus","updateTime","renderHeader","Component","COrders","accountDetails","myKyc","hasAudited","timer","setInterval","clearInterval","userOrderList","sort","a","b","nextProps","showOrders","multipliedBy","toNumber","userCancel","Header","title","token","extra","float","Body","Footer","BasePage","Object","assign","auditedStatus","auditing","nameValue","codeValue","window","auditor","registerKyc","needAuditing","cookie","urlenc","encodeURIComponent","kycTimer","URL","trim","_componentDidMount","commitKyc","MarketOrders","sellOrders","buyOrders","tokenList","showSelect","showPopup","popup","undefined","businessOrderList","ids","filter","comparedTo","dealtValue","owner","exchangeBuy","exchangeSell","tabList","fontWeight","color","lockinValue","fontSize","payMethods","getPayTypes","channel","content","minDealValue","maxDealValue","inline","marginRight","payTypes","each","RadioItem","checked","visible","animationType","amountValue","createOrder","dropdown","menu","stopPropagation","PlaceOrder","disabled","priceValue","match","top","countValue","paddingRight","paddingLeft","min","max","isZero","businessSell","businessBuy","UserOrders","userOrderListByBId","child","html","conform","confirmed","refused","parseInt","getTime","back","BOrders","timestemp","canCancel","businessCancel","underwayCount","bind","tabs0","showType","tabs1","App","selectedIndex","isOwner","origin","accountList","actions","mode","rightContent","changAccount","values","tintColor","onValueChange","tabs","swipeable","initialPage","tab","renderContent","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c1263b72.chunk.js","sourcesContent":["import serojs from \"serojs\";\nimport seropp from \"sero-pp\";\nimport {tokenToBytes} from \"./common\";\nimport {JsonRpc} from \"./utils/jsonrpc\";\nimport BigNumber from 'bignumber.js'\n\nimport {Toast} from \"antd-mobile\";\n\nconst B2B = require(\"blake2b\")\n\nconst config = {\n    name: \"OTC\",\n    contractAddress: \"kcxcoNF22ZssXCGPdN58Ar1P8FsB6cF5vmRzTVNyWCD9viRWvo9jKDfT7ckdEMxnFXSrjZxWbzyLpzNxy4iSUoV\",\n    github: \"https://github.com/coral-dex/otc\",\n    author: \"otc\",\n    url: document.location.href,\n    logo: document.location.protocol + '//' + document.location.host + '/otc/logo.png'\n};\n\nconst abiJson = [{\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"_auditor\", \"type\": \"address\"}],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n    }, {\"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\"}],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"hcode\", \"type\": \"bytes32\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"label\",\n        \"type\": \"uint8\"\n    }], \"name\": \"addLable\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"_manager\", \"type\": \"address\"}],\n    \"name\": \"addManager\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"string\", \"name\": \"token\", \"type\": \"string\"}],\n    \"name\": \"addToken\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}],\n    \"name\": \"arbitrate\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [], \"name\": \"arbitrateOrders\", \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n        }, {\n            \"components\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"businessOrderId\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"price\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"bytes32\", \"name\": \"token\", \"type\": \"bytes32\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"createTime\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"updateTime\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint8\",\n                \"name\": \"payType\",\n                \"type\": \"uint8\"\n            }, {\n                \"internalType\": \"enum Types.OrderStatus\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            }, {\"internalType\": \"enum Types.OrderType\", \"name\": \"orderType\", \"type\": \"uint8\"}],\n            \"internalType\": \"struct Types.UserOrder\",\n            \"name\": \"order\",\n            \"type\": \"tuple\"\n        }, {\"internalType\": \"bytes32\", \"name\": \"hcode\", \"type\": \"bytes32\"}, {\n            \"internalType\": \"bytes\",\n            \"name\": \"mcode\",\n            \"type\": \"bytes\"\n        }, {\"internalType\": \"uint256\", \"name\": \"arbitration\", \"type\": \"uint256\"}, {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n        }], \"internalType\": \"struct Types.RetUserOrder[]\", \"name\": \"rets\", \"type\": \"tuple[]\"\n    }], \"stateMutability\": \"view\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes32[]\", \"name\": \"hcodes\", \"type\": \"bytes32[]\"}, {\n        \"internalType\": \"bool\",\n        \"name\": \"status\",\n        \"type\": \"bool\"\n    }], \"name\": \"audited\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"auditingList\",\n    \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"bytes32\",\n            \"name\": \"hcode\",\n            \"type\": \"bytes32\"\n        }, {\"internalType\": \"bytes\", \"name\": \"pcode\", \"type\": \"bytes\"}],\n        \"internalType\": \"struct OTC.RetAuditedInfo[]\",\n        \"name\": \"rets\",\n        \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"auditor\",\n    \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"string\", \"name\": \"tokenName\", \"type\": \"string\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n    }, {\"internalType\": \"uint256\", \"name\": \"minDealValue\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"maxDealVlaue\",\n        \"type\": \"uint256\"\n    }, {\"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"unit\",\n        \"type\": \"uint8\"\n    }], \"name\": \"businessBuy\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"orderId\", \"type\": \"uint256\"}],\n    \"name\": \"businessCancel\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"string\", \"name\": \"tokenName\", \"type\": \"string\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"unit\",\n        \"type\": \"uint8\"\n    }, {\"internalType\": \"bool\", \"name\": \"myself\", \"type\": \"bool\"}], \"name\": \"businessOrderList\", \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n        }, {\n            \"components\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\n                \"internalType\": \"bytes32\",\n                \"name\": \"token\",\n                \"type\": \"bytes32\"\n            }, {\"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"dealtValue\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"lockinValue\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"minDealValue\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"maxDealValue\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"price\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"timestemp\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint8\",\n                \"name\": \"unit\",\n                \"type\": \"uint8\"\n            }, {\n                \"internalType\": \"enum Types.OrderType\",\n                \"name\": \"orderType\",\n                \"type\": \"uint8\"\n            }, {\"internalType\": \"enum Types.OrderStatus\", \"name\": \"status\", \"type\": \"uint8\"}],\n            \"internalType\": \"struct Types.BusinessOrder\",\n            \"name\": \"order\",\n            \"type\": \"tuple\"\n        }, {\"internalType\": \"string\", \"name\": \"name\", \"type\": \"string\"}, {\n            \"internalType\": \"bytes32\",\n            \"name\": \"hcode\",\n            \"type\": \"bytes32\"\n        }, {\"internalType\": \"uint256\", \"name\": \"underwayCount\", \"type\": \"uint256\"}, {\n            \"internalType\": \"uint256\",\n            \"name\": \"deals\",\n            \"type\": \"uint256\"\n        }, {\"internalType\": \"uint256\", \"name\": \"arbitration\", \"type\": \"uint256\"}, {\n            \"internalType\": \"uint8[]\",\n            \"name\": \"labels\",\n            \"type\": \"uint8[]\"\n        }], \"internalType\": \"struct Types.RetBusinessOrder[]\", \"name\": \"rets\", \"type\": \"tuple[]\"\n    }], \"stateMutability\": \"view\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"minDealValue\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"maxDealVlaue\",\n        \"type\": \"uint256\"\n    }, {\"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"unit\",\n        \"type\": \"uint8\"\n    }], \"name\": \"businessSell\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}, {\n        \"internalType\": \"bytes\",\n        \"name\": \"mcode\",\n        \"type\": \"bytes\"\n    }], \"name\": \"confirmed\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes\", \"name\": \"mcode\", \"type\": \"bytes\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"orderId\",\n        \"type\": \"uint256\"\n    }, {\"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"payType\",\n        \"type\": \"uint8\"\n    }], \"name\": \"exchangeBuy\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes\", \"name\": \"mcode\", \"type\": \"bytes\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"orderId\",\n        \"type\": \"uint256\"\n    }, {\"internalType\": \"uint8\", \"name\": \"payType\", \"type\": \"uint8\"}],\n    \"name\": \"exchangeSell\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"winRole\",\n        \"type\": \"uint8\"\n    }], \"name\": \"executeArbitrate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}],\n    \"name\": \"finished\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"hcode\", \"type\": \"bytes32\"}],\n    \"name\": \"invalidAudited\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"myKyc\",\n    \"outputs\": [{\"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\"}, {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n    }, {\n        \"components\": [{\"internalType\": \"string\", \"name\": \"name\", \"type\": \"string\"}, {\n            \"internalType\": \"uint64\",\n            \"name\": \"deals\",\n            \"type\": \"uint64\"\n        }, {\"internalType\": \"uint64\", \"name\": \"userRoleArbitrates\", \"type\": \"uint64\"}, {\n            \"internalType\": \"uint64\",\n            \"name\": \"businessRoleArbitrates\",\n            \"type\": \"uint64\"\n        }, {\"internalType\": \"uint8[]\", \"name\": \"labels\", \"type\": \"uint8[]\"}],\n        \"internalType\": \"struct OTC.Kyc\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"bytes\", \"name\": \"pcode\", \"type\": \"bytes\"}],\n    \"name\": \"needAuditing\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"id\", \"type\": \"uint256\"}],\n    \"name\": \"orderInfo\",\n    \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"address\",\n            \"name\": \"owner\",\n            \"type\": \"address\"\n        }, {\"internalType\": \"uint256\", \"name\": \"businessOrderId\", \"type\": \"uint256\"}, {\n            \"internalType\": \"uint256\",\n            \"name\": \"value\",\n            \"type\": \"uint256\"\n        }, {\"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\"}, {\n            \"internalType\": \"bytes32\",\n            \"name\": \"token\",\n            \"type\": \"bytes32\"\n        }, {\"internalType\": \"uint256\", \"name\": \"createTime\", \"type\": \"uint256\"}, {\n            \"internalType\": \"uint256\",\n            \"name\": \"updateTime\",\n            \"type\": \"uint256\"\n        }, {\"internalType\": \"uint8\", \"name\": \"payType\", \"type\": \"uint8\"}, {\n            \"internalType\": \"enum Types.OrderStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n        }, {\"internalType\": \"enum Types.OrderType\", \"name\": \"orderType\", \"type\": \"uint8\"}],\n        \"internalType\": \"struct Types.UserOrder\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}],\n    \"name\": \"refused\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"string\", \"name\": \"name\", \"type\": \"string\"}, {\n        \"internalType\": \"bytes32\",\n        \"name\": \"hcode\",\n        \"type\": \"bytes32\"\n    }, {\"internalType\": \"bytes32\", \"name\": \"ecode\", \"type\": \"bytes32\"}, {\n        \"internalType\": \"bytes\",\n        \"name\": \"pcode\",\n        \"type\": \"bytes\"\n    }], \"name\": \"registerKyc\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"_auditor\", \"type\": \"address\"}],\n    \"name\": \"setAuditor\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\"}],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"orderId\", \"type\": \"uint256\"}, {\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n    }], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"userOrderId\", \"type\": \"uint256\"}],\n    \"name\": \"userCancel\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [], \"name\": \"userOrderList\", \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n        }, {\n            \"components\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"businessOrderId\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"price\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"bytes32\", \"name\": \"token\", \"type\": \"bytes32\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"createTime\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"updateTime\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint8\",\n                \"name\": \"payType\",\n                \"type\": \"uint8\"\n            }, {\n                \"internalType\": \"enum Types.OrderStatus\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            }, {\"internalType\": \"enum Types.OrderType\", \"name\": \"orderType\", \"type\": \"uint8\"}],\n            \"internalType\": \"struct Types.UserOrder\",\n            \"name\": \"order\",\n            \"type\": \"tuple\"\n        }, {\"internalType\": \"bytes32\", \"name\": \"hcode\", \"type\": \"bytes32\"}, {\n            \"internalType\": \"bytes\",\n            \"name\": \"mcode\",\n            \"type\": \"bytes\"\n        }, {\"internalType\": \"uint256\", \"name\": \"arbitration\", \"type\": \"uint256\"}, {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n        }], \"internalType\": \"struct Types.RetUserOrder[]\", \"name\": \"rets\", \"type\": \"tuple[]\"\n    }], \"stateMutability\": \"view\", \"type\": \"function\"\n}, {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"bid\", \"type\": \"uint256\"}],\n    \"name\": \"userOrderListByBId\",\n    \"outputs\": [{\n        \"components\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n        }, {\n            \"components\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"businessOrderId\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"price\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"bytes32\", \"name\": \"token\", \"type\": \"bytes32\"}, {\n                \"internalType\": \"uint256\",\n                \"name\": \"createTime\",\n                \"type\": \"uint256\"\n            }, {\"internalType\": \"uint256\", \"name\": \"updateTime\", \"type\": \"uint256\"}, {\n                \"internalType\": \"uint8\",\n                \"name\": \"payType\",\n                \"type\": \"uint8\"\n            }, {\n                \"internalType\": \"enum Types.OrderStatus\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            }, {\"internalType\": \"enum Types.OrderType\", \"name\": \"orderType\", \"type\": \"uint8\"}],\n            \"internalType\": \"struct Types.UserOrder\",\n            \"name\": \"order\",\n            \"type\": \"tuple\"\n        }, {\"internalType\": \"bytes32\", \"name\": \"hcode\", \"type\": \"bytes32\"}, {\n            \"internalType\": \"bytes\",\n            \"name\": \"mcode\",\n            \"type\": \"bytes\"\n        }, {\"internalType\": \"uint256\", \"name\": \"arbitration\", \"type\": \"uint256\"}, {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n        }], \"internalType\": \"struct Types.RetUserOrder[]\", \"name\": \"rets\", \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}];\n\nconst contract = serojs.callContract(abiJson, \"kcxcoNF22ZssXCGPdN58Ar1P8FsB6cF5vmRzTVNyWCD9viRWvo9jKDfT7ckdEMxnFXSrjZxWbzyLpzNxy4iSUoV\");\n\nconst rpc = new JsonRpc();\n\nconst unitMap = new Map([[0, \"CNY\"], [1, \"USD\"]]);\nconst unitTokens = new Map([[0, [\"SCNY\", \"SUSD\"]], [1, [\"SUSD\"]]]);\n\nclass OAbi {\n\n    constructor() {\n        let self = this;\n        self.init = new Promise(\n            (resolve, reject) => {\n                seropp.init(config, function (rest) {\n                    if (rest === 'success') {\n                        return resolve()\n                    } else {\n                        return reject(rest)\n                    }\n                })\n            }\n        )\n    }\n\n    unitName(unit) {\n        return unitMap.get(unit);\n    }\n\n    tokenList(unit) {\n        if (unitTokens.has(unit)) {\n           return unitTokens.get(unit)\n        }\n        return [];\n    }\n\n    initLanguage(callback) {\n        seropp.getInfo(function (info) {\n            callback(info.language);\n        });\n    }\n\n    code1(code0) {\n        return this.Blake2B(\"AHOJ.CODE1\", code0);\n    }\n\n    code2(code1) {\n        return this.Blake2B(\"AHOJ.CODE2\", code1);\n    }\n\n    Blake2B(personal, input) {\n        if (input.slice(0, 2) === '0x') {\n            input = input.slice(2);\n        }\n        const data = Buffer.from(input, \"hex\")\n        const p = Buffer.alloc(16, 0);\n        p.fill(personal, 0, personal.length)\n        const hash = B2B(32, null, null, p)\n        const out = hash.update(data)\n        const buf = out.digest(\"binary\")\n\n        for (var hex = [], i = 0; i < buf.length; i++) {\n            /* jshint ignore:start */\n            hex.push((buf[i] >>> 4).toString(16));\n            hex.push((buf[i] & 0xf).toString(16));\n            /* jshint ignore:end */\n        }\n        return \"0x\" + hex.join(\"\");\n    }\n\n    pkrCrypto(pk, pkr, data, callback) {\n        seropp.pkrCrypto({pk: pk, pkr: pkr, data: data}, callback)\n    }\n\n    pkrEncrypt(pkr, data, callback) {\n        seropp.pkrEncrypt({pkr: pkr, data: data}, callback)\n    }\n\n    pkrDecrypt(pk, data, callback) {\n        seropp.pkrDecrypt({pk: pk, data: data}, callback)\n    }\n\n    getPayTypes(code2, callback) {\n        let param = {name: \"profile.getByCode2\", data: {code2: code2}};\n        rpc.post(\"https://api.ahoj.xyz/api\", JSON.stringify(param), function (ret) {\n            console.log(\"getPayTypes\", ret);\n            if (ret.state == \"succ\") {\n                callback(ret.data.pcMethods);\n            }\n        });\n    }\n\n    accountDetails(pk, callback) {\n        let self = this;\n        seropp.getAccountDetail(pk, function (item) {\n            callback({pk: item.PK, mainPKr: item.MainPKr, name: item.Name, balances: item.Balance})\n        });\n    }\n\n    accountList(callback) {\n        seropp.getAccountList(function (data) {\n            let accounts = [];\n            data.forEach(function (item, index) {\n                accounts.push({\n                    pk: item.PK,\n                    mainPKr: item.MainPKr,\n                    name: item.Name,\n                    balances: item.Balance,\n                })\n            });\n            callback(accounts)\n        });\n    }\n\n    callMethod(contract, _method, from, _args, callback) {\n        let that = this;\n        let packData = contract.packData(_method, _args, true);\n        let callParams = {\n            from: from,\n            to: contract.address,\n            data: packData\n        };\n\n        seropp.call(callParams, function (callData) {\n            if (callData !== \"0x\") {\n                let res = contract.unPackDataEx(_method, callData);\n                if (callback) {\n                    callback(res);\n                }\n            } else {\n                callback(\"0x0\");\n            }\n        });\n    }\n\n    executeMethod(contract, _method, pk, mainPKr, args, tokenName, value, callback) {\n        let that = this;\n\n        let packData = \"0x\";\n        if (\"\" !== _method) {\n            packData = contract.packData(_method, args, true);\n        }\n\n        let executeData = {\n            from: pk,\n            to: contract.address,\n            value: \"0x\" + value.toString(16),\n            data: packData,\n            gasPrice: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: tokenName,\n        };\n        let estimateParam = {\n            from: mainPKr,\n            to: contract.address,\n            value: \"0x\" + value.toString(16),\n            data: packData,\n            gasPrice: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: tokenName,\n        };\n\n        seropp.estimateGas(estimateParam, function (gas, error) {\n            if (error) {\n                Toast.fail(\"Failed to execute smart contract\")\n            } else {\n                executeData[\"gas\"] = gas;\n                seropp.executeContract(executeData, function (res, error) {\n                    if (callback) {\n                        callback(res, error)\n                    }\n                })\n            }\n        });\n    }\n\n    getFullAddress(pkrs, callback) {\n        console.log(pkrs);\n        rpc.seroRpc(\"http://150.158.109.143:8545\", \"sero_getFullAddress\", [pkrs], function (rets) {\n            callback(rets);\n        });\n    }\n\n    auditor(from, callback) {\n        let self = this;\n        this.callMethod(contract, 'auditor', from, [], function (ret) {\n            self.getFullAddress([ret[0]], function (rets) {\n                callback(rets.result[ret[0]])\n            });\n        });\n    }\n\n    auditingList(from, callback) {\n        this.callMethod(contract, 'auditingList', from, [], function (ret) {\n            callback(ret.rets)\n        });\n    }\n\n    myKyc(pk, from, callback) {\n        let self = this;\n        this.callMethod(contract, 'myKyc', from, [], function (rets) {\n            if (rets[0] != \"0x0000000000000000000000000000000000000000000000000000000000000000\") {\n                self.pkrCrypto(pk, from, rets[0], function (code) {\n                    console.log(\"myKyc\", rets);\n                    callback(code, rets[1]);\n                })\n            } else {\n                callback(null, 0);\n            }\n            callback(rets[0] != \"0x0000000000000000000000000000000000000000000000000000000000000000\" ? rets[0] : null, rets[1]);\n        });\n    }\n\n    orderInfo(from, id, callback) {\n        this.callMethod(contract, 'orderInfo', from, [this.bigToHex(id)], function (ret) {\n            callback(ret[0]);\n        });\n    }\n\n    arbitrateOrders(from, callback) {\n        this.callMethod(contract, 'arbitrateOrders', from, [], function (ret) {\n            callback(ret.rets);\n        });\n    }\n\n    businessOrderList(from, tokenName, unit, flag, callback) {\n        this.callMethod(contract, 'businessOrderList', from, [tokenName, unit, flag], function (ret) {\n            console.log(\"businessOrderList\", from, tokenName, unit, flag, ret);\n            callback(ret.rets);\n        });\n    }\n\n    userOrderListByBId(from, id, callback) {\n        this.callMethod(contract, 'userOrderListByBId', from, [this.bigToHex(id)], function (ret) {\n            callback(ret.rets);\n        });\n    }\n\n    userOrderList(from, callback) {\n        this.callMethod(contract, 'userOrderList', from, [], function (ret) {\n            callback(ret.rets);\n        });\n    }\n\n    needAuditing(pk, mainPKr, pcode, callback) {\n        this.executeMethod(contract, 'needAuditing', pk, mainPKr, [pcode], \"SERO\", 0, callback);\n    }\n\n    audited(pk, mainPKr, hcodes, flag, callback) {\n        this.executeMethod(contract, 'audited', pk, mainPKr, [hcodes, flag], \"SERO\", 0, callback);\n    }\n\n    invalidAudited(pk, mainPKr, hcode, callback) {\n        this.executeMethod(contract, 'invalidAudited', pk, mainPKr, [hcode], \"SERO\", 0, callback);\n    }\n\n    addLable(pk, mainPKr, hcode, lable, callback) {\n        this.executeMethod(contract, 'addLable', pk, mainPKr, [hcode, lable], \"SERO\", 0, callback);\n    }\n\n    arbitrate(pk, mainPKr, orderId, callback) {\n        this.executeMethod(contract, 'arbitrate', pk, mainPKr, [this.bigToHex(orderId)], \"SERO\", 0, callback);\n    }\n\n    executeArbitrate(pk, mainPKr, orderId, winRole, callback) {\n        this.executeMethod(contract, 'executeArbitrate', pk, mainPKr, [this.bigToHex(orderId), winRole], \"SERO\", 0, callback);\n    }\n\n    registerKyc(pk, mainPKr, name, hcode, ecode, pcode, callback) {\n        this.executeMethod(contract, 'registerKyc', pk, mainPKr, [name, hcode, ecode, pcode], \"SERO\", 0, callback);\n    }\n\n    exchangeBuy(pk, mainPKr, mcode, orderId, value, payType, callback) {\n        this.executeMethod(contract, 'exchangeBuy', pk, mainPKr, [mcode, this.bigToHex(orderId), this.bigToHex(value), payType], \"SERO\", 0, callback);\n    }\n\n    exchangeSell(pk, mainPKr, mcode, orderId, tokenName, value, payType, callback) {\n        this.executeMethod(contract, 'exchangeSell', pk, mainPKr, [mcode, this.bigToHex(orderId), payType], tokenName, value, callback);\n    }\n\n    bigToHex(big) {\n        return \"0x\" + new BigNumber(big).toString(16)\n    }\n\n    businessSell(pk, mainPKr, tokenName, value, minValue, maxValue, price, unit, callback) {\n        this.executeMethod(contract, 'businessSell', pk, mainPKr, [this.bigToHex(minValue), this.bigToHex(maxValue), this.bigToHex(price), unit], tokenName, value, callback);\n    }\n\n    businessBuy(pk, mainPKr, tokenName, value, minValue, maxValue, price, unit, callback) {\n        this.executeMethod(contract, 'businessBuy', pk, mainPKr, [tokenName, this.bigToHex(value), this.bigToHex(minValue), this.bigToHex(maxValue), this.bigToHex(price), unit], \"SERO\", 0, callback);\n    }\n\n    refused(pk, mainPKr, orderId, callback) {\n        this.executeMethod(contract, 'refused', pk, mainPKr, [this.bigToHex(orderId)], \"SERO\", 0, callback);\n    }\n\n    confirmed(pk, mainPKr, orderId, mcode, callback) {\n        this.executeMethod(contract, 'confirmed', pk, mainPKr, [this.bigToHex(orderId), mcode], \"SERO\", 0, callback);\n    }\n\n    finished(pk, mainPKr, orderId, callback) {\n        this.executeMethod(contract, 'finished', pk, mainPKr, [this.bigToHex(orderId)], \"SERO\", 0, callback);\n    }\n\n    userCancel(pk, mainPKr, orderId, callback) {\n        this.executeMethod(contract, 'userCancel', pk, mainPKr, [this.bigToHex(orderId)], \"SERO\", 0, callback);\n    }\n\n    businessCancel(pk, mainPKr, orderId, callback) {\n        this.executeMethod(contract, 'businessCancel', pk, mainPKr, [this.bigToHex(orderId)], \"SERO\", 0, callback);\n    }\n}\n\nconst oAbi = new OAbi();\nexport default oAbi;","import BigNumber from \"bignumber.js\";\n\nconst keccak256 = require(\"keccak256\");\nconst zeros = \"000000000000000000\";\n\nexport function randomByte32() {\n    let hex = \"0x\";\n    for (var i = 0; i < 8; i++) {\n        hex += Math.random().toString(16).slice(-8)\n    }\n    return hex;\n    // return Buffer.from(hex, \"hex\");\n}\n\nfunction getDate(num) {\n    if (num < 10) {\n        return \"0\" + num;\n    } else {\n        return num;\n    }\n}\n\nexport function formatDate(time) {\n    const Y = time.getFullYear();\n    const M = getDate(time.getMonth() + 1);\n    const d = getDate(time.getDate());\n    const h = getDate(time.getHours());\n    const m = getDate(time.getMinutes());\n    // var s =getDate(time.getSeconds());\n    return `${Y}/${M}/${d} ${h}:${m}`;\n\n}\n\nexport function hash(data) {\n    return \"0x\" + Buffer.from(keccak256(data)).toString('hex')\n}\n\nexport function showToken(token) {\n    if (token.length > 15) {\n        return token.slice(0, 10) + \"...\" + token.slice(-5)\n    } else {\n        return token\n    }\n}\n\nexport function bytes32ToToken(data) {\n    let bytes = Buffer.from(data.substring(2), \"hex\");\n    return String.fromCharCode.apply(String, bytes);;\n}\n\nexport function showPrice(price) {\n    if (price) {\n        let ret = new BigNumber(price).dividedBy(new BigNumber(1e18)).toFixed(18);\n        return trimNumber(ret, 18);\n    } else {\n        return \"0.000\";\n    }\n}\n\nexport function showValueP(val, decimal, decimalPlaces) {\n    let num = new BigNumber(val).dividedBy(new BigNumber(10).pow(decimal));\n    if (num.comparedTo(1000000) >= 0) {\n        let text = num.dividedBy(1000000).toFixed(2);\n        return trimNumber(text, 2) + \"M\";\n    } else if (num.comparedTo(1000) >= 0) {\n        let text = num.dividedBy(1000).toFixed(2);\n        return trimNumber(text, 2) + \"K\";\n    } else {\n        return trimNumber(num.toFixed(decimalPlaces), decimalPlaces);\n    }\n\n}\n\nexport function showValue(val, decimal, decimalPlaces) {\n    let text = new BigNumber(val).dividedBy(new BigNumber(10).pow(decimal)).toFixed(decimalPlaces);\n    return trimNumber(text, decimalPlaces)\n}\n\nexport function showPK(pk, len) {\n    if (!pk) {\n        return \"\";\n    }\n    if (!len) {\n        len = 8;\n    }\n    return pk.slice(0, len) + \"...\" + pk.slice(-len)\n}\n\nexport function tokenToBytes(token) {\n    let bytes = Buffer.alloc(32);\n    bytes.fill(token, 0, token.length);\n    return \"0x\" + bytes.toString('hex');\n}\n\nfunction trimNumber(numberStr, decimalPlaces) {\n    let vals = numberStr.split(\".\")\n    if (vals.length < 2) {\n        return numberStr;\n    } else {\n        let index = -1;\n        let decimal = vals[1];\n        for (let i = decimal.length - 1; i >= 0; i--) {\n            if (decimal.charAt(i) != '0') {\n                index = i;\n                break;\n            }\n        }\n        decimal = decimal.substring(0, index + 1);\n        let numStr = vals[0];\n        if (decimal.length > decimalPlaces) {\n            decimal = decimal.substring(0, decimalPlaces);\n        }\n        if (decimal.length > 0) {\n            numStr += \".\" + decimal;\n        }\n        return numStr\n    }\n}\n","import axios from 'axios'\n\n\nclass JsonRpc {\n\n    constructor() {\n    }\n\n    seroRpc(rpc, _method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(rpc, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \", error);\n        })\n    }\n\n    post(url, data, callback) {\n        axios.post(url, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \", error);\n        })\n    }\n\n    get(url, cb) {\n        axios.get(url).then(function (rest) {\n            if (cb) {\n                cb(rest.data)\n            }\n        })\n    }\n}\n\nexport {JsonRpc}\n","const list = [\"zh_CN\", \"en_US\", \"be_BY\", \"ja_JP\", \"ko_KR\"];\n\nclass Language {\n\n    set = (_lang) => {\n        if (list.indexOf(_lang) > -1) {\n            localStorage.setItem(\"language\", _lang)\n        } else {\n            localStorage.setItem(\"language\", \"en_US\")\n        }\n    }\n\n    e = () => {\n        const lang = localStorage.getItem(\"language\");\n        if (lang === \"zh_CN\") {\n            return this.zh_CN;\n        } else if (lang === \"en_US\") {\n            return this.en_US;\n        } else if (lang === \"be_BY\") {\n            return this.be_BY;\n        } else if (lang === \"ja_JP\") {\n            return this.ja_JP;\n        } else if (lang === \"ko_KR\") {\n            return this.ko_KR;\n        } else {\n            let localUtc = new Date().getTimezoneOffset() / 60;\n            if (localUtc === -8) {\n                return this.zh_CN;\n            } else {\n                return this.en_US;\n            }\n        }\n    }\n\n    zh_CN = {\n        text: \"语言\",\n        change: \"切换\",\n        modal: {\n            ok: \"确定\",\n            cancel: \"取消\",\n        },\n        button: {\n            ok: \"确定\",\n            cancel: \"取消\",\n        },\n        kyc: {\n            title1: \"未完成KYC信息，请完成\",\n            msg1: \"点确定继续\",\n            title2: \"设置昵称\",\n            title3: \"未提交审核\",\n            msg3: \"点击确定提交审核\",\n            title4: \"等待审核通过\"\n        },\n        order:{\n\n            buy:\"买入\",\n            sell:\"卖出\",\n            time:\"时间\",\n            price:\"价格\",\n            amount:\"数量\",\n            dealAmount:\"成交量\",\n            orderType:\"交易类型\",\n            op:\"操作\",\n            cancel:\"撤消订单\",\n            confirm:\"确认\",\n            refuse:\"拒绝\",\n            pass:\"放行\",\n            tips1:\"待确认\",\n            tips2_0:\"待付款\",\n            tips2_1:\"应收\",\n            tips2_3:\"请确认已收款！\",\n            tips2_4:\"超时未收到付款\",\n            tips3:\"已拒绝\",\n            tips4:\"已取消\",\n            tips5:\"已完成\",\n            tips6:\"点确定继续\",\n            tips7:\"撤消订单\",\n            tips8:\"商家信息\",\n            tips9:\"超时放行后请自行放行\",\n            tips10:\"请确认已支付\",\n            tips11:\"请确认已支付\",\n            tips12:\"请确认已收到\",\n        }\n    };\n\n    en_US = {\n        text: \"语言\",\n        change: \"切换\",\n        modal: {\n            ok: \"确定\",\n            cancel: \"取消\",\n        },\n        kyc: {\n            title1: \"未完成KYC信息，请完成\",\n            msg1: \"点确定继续\",\n            title2: \"设置昵称\",\n            title3: \"未提交审核\",\n            msg3: \"点击确定提交审核\",\n            title4: \"等待审核通过\"\n        },\n        order:{\n\n            buy:\"买入\",\n            sell:\"卖出\",\n            time:\"时间\",\n            price:\"价格\",\n            amount:\"数量\",\n            dealAmount:\"成交量\",\n            orderType:\"交易类型\",\n            op:\"操作\",\n            cancel:\"撤消订单\",\n            confirm:\"确认\",\n            refuse:\"拒绝\",\n            pass:\"放行\",\n            tips1:\"待确认,请联系商家确认订单\",\n            tips2_0:\"待付款\",\n            tips2_1:\"应收\",\n            tips2_3:\"请确认已收款！\",\n            tips2_4:\"超时未收到付款\",\n            tips3:\"已拒绝\",\n            tips4:\"已取消\",\n            tips5:\"已完成\",\n            tips6:\"点确定继续\",\n            tips7:\"撤消订单\",\n            tips8:\"商家信息\",\n            tips9:\"超时放行后请自行放行\",\n            tips10:\"请确认已支付\",\n            tips11:\"请确认已支付\",\n            tips12:\"请确认已收到\",\n        }\n\n    };\n\n\n    be_BY = {\n        text: \"языка\",\n        modal: {\n            ok: \"OK\",\n            cancel: \"Отмена\"\n        },\n        tabBar: {\n            price: \"рынки\",\n            trade: \"торговать\",\n            assets: \"активы\"\n        },\n        home: {\n            account: \"учетная запись\",\n            change: \"изменить\",\n            name: \"имя\",\n            trade: \"торговать\",\n            lastPrice: \"Последняя цена\",\n        },\n        trade: {\n            buy: \"купить\",\n            sell: \"продавать\",\n            orderPrice: \"Цена\",\n            orderNum: \"сумма\",\n            available: \"доступный\",\n            amount: \"сумма\",\n\n            price: \"Цена\",\n            num: \"сумма\",\n\n            openOrders: \"Открытые заказы\",\n            all: \"все\",\n            cancel: \"Отмена\",\n            cancelAll: \"Отменить все\",\n\n            finished: \"Завершенный\",\n            canceled: \"отменен\",\n            total: \"общее количество\",\n            volume: \"объем\",\n            depth: \"depth map\",\n        },\n\n        assets: {\n            total: \"Итоговый баланс\",\n            available: \"Доступный\",\n            locked: \"в заказах\",\n            rechange: \"перезарядка\",\n            withdrawal: \"Сумма вывода\",\n            trade: \"торговать\",\n            num: \"количество\"\n        }\n    };\n\n    ja_JP = {\n        text: \"言語\",\n        modal: {\n            ok: \"OK\",\n            cancel: \"キャンセル\"\n        },\n        tabBar: {\n            price: \"市場\",\n            trade: \"トレード\",\n            assets: \"資産\"\n        },\n        home: {\n            account: \"アカウント\",\n            change: \"変化する\",\n            name: \"名前\",\n            trade: \"トレード\",\n            lastPrice: \"最後価格\",\n        },\n        trade: {\n            buy: \"購入\",\n            sell: \"売る\",\n            orderPrice: \"価格\",\n            orderNum: \"量\",\n            available: \"利用可能\",\n            amount: \"量\",\n\n            price: \"価格\",\n            num: \"量\",\n\n            openOrders: \"未処理の注文\",\n            all: \"すべて\",\n            cancel: \"キャンセル\",\n            cancelAll: \"すべてキャンセル\",\n\n            finished: \"完成した\",\n            canceled: \"キャンセル\",\n            total: \"合計\",\n            volume: \"ボリューム\",\n            depth: \"depth map\",\n        },\n\n        assets: {\n            total: \"合計\",\n            available: \"利用可能\",\n            locked: \"順番に\",\n            rechange: \"保証金\",\n            withdrawal: \"撤回\",\n            trade: \"トレード\",\n            num: \"量\"\n        }\n    };\n\n    ko_KR = {\n        text: \"언어\",\n        modal: {\n            ok: \"OK\",\n            cancel: \"취소\"\n        },\n        tabBar: {\n            price: \"시장\",\n            trade: \"무역\",\n            assets: \"자산\"\n        },\n        home: {\n            account: \"계정\",\n            change: \"변화\",\n            name: \"이름\",\n            trade: \"무역\",\n            lastPrice: \"마지막 가격\",\n        },\n        trade: {\n            buy: \"구입\",\n            sell: \"팔다\",\n            orderPrice: \"가격\",\n            orderNum: \"양\",\n            available: \"이용할 수 있는\",\n            amount: \"양\",\n\n            price: \"가격\",\n            num: \"양\",\n\n            openOrders: \"주문 열기\",\n            all: \"모두\",\n            cancel: \"취소\",\n            cancelAll: \"모두 취소\",\n\n            finished: \"완성됨\",\n            canceled: \"취소 된\",\n            total: \"합계\",\n            volume: \"음량\",\n            depth: \"depth map\",\n        },\n\n        assets: {\n            total: \"합계\",\n            available: \"사용 가능한 잔액\",\n            locked: \"순서대로\",\n            rechange: \"재충전\",\n            withdrawal: \"철수\",\n            trade: \"무역\",\n            num: \"양\"\n        }\n    };\n};\n\nconst language = new Language();\nexport default language","import React, {Component} from 'react';\nimport {Button, Flex, List, Modal, WhiteSpace, WingBlank} from \"antd-mobile\";\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from './oabi'\nimport {hash, showValue, formatDate} from \"./common\";\nimport Iframe from \"react-iframe\";\nimport language from \"./language\";\nimport BigNumber from \"bignumber.js\";\n\nexport class AuditingList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pk: localStorage.getItem(\"PK\"),\n            mainPKr: localStorage.getItem(\"MAINPKR\"),\n            orderInfo: null,\n            orders: [],\n            codes: []\n        }\n    }\n\n    componentDidMount() {\n        let self = this;\n        oAbi.init\n            .then(() => {\n                oAbi.auditingList(self.state.mainPKr, function (codes) {\n                    self.setState({codes: codes});\n                });\n                oAbi.arbitrateOrders(self.state.mainPKr, function (orders) {\n                    self.setState({orders: orders});\n                });\n            });\n    }\n\n    showStatus(status) {\n        let text = \"\";\n        if (status == 1) {\n            text = language.e().order.tips1;\n        } else if (status == 2) {\n            return \"已确定\"\n        } else if (status == 3) {\n            text = language.e().order.tips3;\n        } else if (status == 4) {\n            text = language.e().order.tips4;\n        } else if (status == 5) {\n            text = language.e().order.tips5;\n        } else if (status == 6) {\n            text = \"仲裁中\"\n        }\n        return text;\n    }\n\n    render() {\n        let self = this;\n        let list = this.state.codes.map((item, index) => {\n\n            return (\n                <List.Item key={index}>\n                    <Flex>\n                        <Flex.Item style={{flex: 3}}>\n                            <div style={{\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                whiteSpace: 'nowrap'\n                            }}>{item.hcode}</div>\n                        </Flex.Item>\n                        <Flex.Item style={{flex: 1, textAlign: 'right'}}><a onClick={() => {\n                            oAbi.pkrDecrypt(self.state.pk, item.pcode, function (code1) {\n                                if (oAbi.code2(code1) === item.hcode) {\n                                    let url = \"https://ahoj.xyz/level/code1/\" + code1 + \"?lang=cn\";\n                                    Modal.alert('', <Iframe url={url}\n                                                            width=\"100%\"\n                                                            height=\"450px\"\n                                                            display=\"initial\"\n                                                            position=\"relative\"/>, [\n                                        {\n                                            text: '拒绝', onPress: () => {\n                                                oAbi.audited(self.state.pk, self.state.mainPKr, [item.hcode], false);\n                                            }\n                                        },\n                                        {\n                                            text: '通过', onPress: () => {\n                                                oAbi.audited(self.state.pk, self.state.mainPKr, [item.hcode], true);\n                                            }\n                                        },\n                                    ]);\n                                }\n                            });\n                        }}>check</a>\n                        </Flex.Item>\n                    </Flex>\n                </List.Item>\n            )\n        });\n\n        let ordersHtml = this.state.orders.map((item, index) => {\n            return (\n                <List.Item key={index}>\n                    <Flex>\n                        <Flex.Item\n                            style={{flex: 1}}>{item.order.orderType ==0?\"买入\":\"卖出\"}</Flex.Item>\n                        <Flex.Item style={{flex: 1}}>{item.id}</Flex.Item>\n                        <Flex.Item style={{flex: 1}}>{showValue(item.order.price, 9, 4)} {oAbi.unitName(item.order.unit)}</Flex.Item>\n                        <Flex.Item style={{flex: 1}}>{showValue(item.order.value, 18, 4)}</Flex.Item>\n\n                        <Flex.Item style={{flex: 1}}>{item.order.payType}</Flex.Item>\n                        <Flex.Item style={{flex: 1}}>\n                            <a size=\"small\" onClick={() => {\n                                Modal.operation([\n                                    {\n                                        text: '用户胜诉', onPress: () => {\n                                            oAbi.executeArbitrate(this.state.pk, this.state.mainPKr, item.id, 0);\n                                        }\n                                    },\n                                    {\n                                        text: '商家胜诉', onPress: () => {\n                                            oAbi.executeArbitrate(this.state.pk, this.state.mainPKr, item.id, 1);\n                                        }\n                                    },\n                                ])\n                            }}>仲裁</a>\n                        </Flex.Item>\n                    </Flex>\n                </List.Item>\n\n            )\n        })\n\n        return (\n            <div style={{border: '1px solid #d4d4d5', paddingTop: '10px'}}>\n                <WingBlank>\n                    <div className=\"ui action input\">\n                        <input type=\"text\" placeholder=\"order id\" ref={el => this.orderIdValue = el}\n                               onChange={(event) => {\n                                   this.orderIdValue.value = event.target.value;\n                               }}/>\n                        <button className=\"ui button\" onClick={() => {\n                            oAbi.orderInfo(this.state.mainPKr, this.orderIdValue.value, function (orderInfo) {\n                                self.setState({orderInfo: orderInfo});\n                            })\n                        }}>查看\n                        </button>\n                        <button className=\"ui button\" onClick={() => {\n                            oAbi.arbitrate(this.state.pk, this.state.mainPKr, this.orderIdValue.value);\n                        }}>仲裁</button>\n                    </div>\n                    <WhiteSpace/>\n                    {\n\n                        this.state.orderInfo && <Flex>\n                            <Flex.Item\n                                style={{flex: 1}}>{this.state.orderInfo.orderType ==0?\"买入\":\"卖出\"}</Flex.Item>\n                            <Flex.Item\n                                style={{flex: 1}}>{showValue(this.state.orderInfo.price, 9, 4)} {oAbi.unitName(this.state.orderInfo.unit)}</Flex.Item>\n                            <Flex.Item style={{flex: 1}}>{showValue(this.state.orderInfo.value, 18, 4)}</Flex.Item>\n\n                            <Flex.Item style={{flex: 1}}>{this.showStatus(this.state.orderInfo.status)}</Flex.Item>\n                            <Flex.Item style={{flex: 1}}>{this.state.orderInfo.payType}</Flex.Item>\n                            <Flex.Item\n                                style={{flex: 3}}>{formatDate(new Date(this.state.orderInfo.updateTime * 1000))}</Flex.Item>\n                        </Flex>\n                    }\n                </WingBlank>\n                <WhiteSpace/>\n                <WingBlank>\n                    <List renderHeader={() => '仲裁列表'} className=\"my-list\">\n                        {ordersHtml}\n                    </List>\n\n                </WingBlank>\n                <WhiteSpace/>\n                <WingBlank>\n                    <List renderHeader={() => '审核列表'} className=\"my-list\">\n                        {list}\n                    </List>\n                </WingBlank>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Modal, Flex, WhiteSpace, Icon, Card} from \"antd-mobile\";\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from '../oabi'\nimport {bytes32ToToken, formatDate, showValue} from \"../common\";\nimport BigNumber from 'bignumber.js'\nimport language from '../language'\nimport Iframe from \"react-iframe\";\n\nconst alert = Modal.alert;\n\nexport class COrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {pk: this.props.pk, orders: []}\n    }\n\n    componentDidMount() {\n        let self = this;\n        oAbi.init\n            .then(() => {\n                oAbi.accountDetails(this.state.pk, function (account) {\n                    oAbi.myKyc(account.pk, account.mainPKr, function (code, pcode, hasAudited) {\n                        self.setState({mainPKr: account.mainPKr, code: code, pcode: pcode, hasAudited: hasAudited});\n                        self.init(account.mainPKr);\n                        self.timer = setInterval(function () {\n                            self.init();\n                        }, 10 * 1000);\n                    });\n                });\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    init(mainPKr) {\n        let self = this;\n        if (!mainPKr) {\n            mainPKr = this.state.mainPKr;\n        }\n        oAbi.userOrderList(mainPKr, function (orders) {\n            if(orders) {\n                orders.sort(function (a, b) {\n                    return b.order.updateTime - a.order.updateTime;\n                });\n                self.setState({orders: orders});\n            }\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.pk != this.props.pk) {\n            oAbi.accountDetails(nextProps.pk, function (account) {\n                oAbi.myKyc(account.pk, account.mainPKr, function (code) {\n                    self.setState({pk: nextProps.pk, mainPKr: account.mainPKr, code: code});\n                    self.init(account.mainPKr);\n                })\n            });\n        }\n    }\n\n    render() {\n        let self = this;\n        let showOrders = this.state.orders.map((item, index) => {\n            let text = \"\";\n            if (item.order.status == 1) {\n                text = language.e().order.tips1;\n            } else if (item.order.status == 2) {\n                let value = new BigNumber(item.order.price).multipliedBy(item.order.value).dividedBy(new BigNumber(10).pow(27)).toNumber();\n                if (item.order.orderType == 0) {\n                    text = language.e().order.tips2_0 + value + \"CNY\";\n                } else {\n                    text = <span>\n                        {language.e().order.tips2_1}{value}CNY,\n                        <a onClick={() => {\n                            alert(language.e().order.pass, <span>请确认已经收到对方付款，应收:{value}CNY</span>, [\n                                {text: language.e().modal.cancel, onPress: () => console.log('cancel')},\n                                {\n                                    text: language.e().modal.ok, onPress: () => {\n                                        oAbi.finished(self.state.pk, self.state.mainPKr, item.id);\n                                    }\n                                }\n                            ]);\n                        }}>{language.e().order.pass}</a>\n                    </span>\n                }\n            } else if (item.order.status == 3) {\n                text = language.e().order.tips3;\n            } else if (item.order.status == 4) {\n                text = language.e().order.tips4;\n            } else if (item.order.status == 5) {\n                text = language.e().order.tips5;\n            } else if (item.order.status == 6) {\n                text = \"仲裁中\"\n            }\n            let status = <span>{text}\n                {\n                    item.order.status == 1 && <span>\n                        <a onClick={() => {\n                            alert(language.e().order.tips7, <span>ID:{item.id},{language.e().order.tips6}</span>, [\n                                {text: language.e().modal.cancel, onPress: () => console.log('cancel')},\n                                {\n                                    text: language.e().modal.ok, onPress: () => {\n                                        oAbi.userCancel(this.state.pk, this.state.mainPKr, item.id);\n                                    }\n                                },\n                            ])\n                        }\n                        }>,撤消</a>\n                    </span>\n                }\n            </span>\n            return <div className=\"item\" key={index}>\n                <WhiteSpace/>\n                <Card>\n                    <Card.Header\n                        title={\n                            <span>{item.order.orderType == 0 ? language.e().order.buy : language.e().order.sell} {bytes32ToToken(item.order.token)}</span>}\n                        extra={<div><span style={{float: 'left'}}>ID: {item.id}</span>&nbsp;&nbsp;&nbsp;<span\n                            style={{textAlign: 'right'}}>{status}</span></div>}\n                    />\n                    <Card.Body>\n                        <Flex>\n                            <Flex.Item style={{flex: 2}}>\n                                <div>{language.e().order.time}</div>\n                                <div>{formatDate(new Date(item.order.updateTime * 1000))}</div>\n                            </Flex.Item>\n                            <Flex.Item style={{flex: 1}}>\n                                <div>{language.e().order.price}</div>\n                                <div>{showValue(item.order.price, 9, 4)}</div>\n                            </Flex.Item>\n                            <Flex.Item style={{flex: 1, textAlign: 'right'}}>\n                                <div>{language.e().order.amount}</div>\n                                <div>{showValue(item.order.value, 18, 4)}</div>\n                            </Flex.Item>\n                        </Flex>\n                    </Card.Body>\n                    <Card.Footer extra={<div>\n                         <span>\n                        {item.order.status == 2 ?\n\n                            <a onClick={() => {\n                                oAbi.pkrDecrypt(self.state.pk, item.mcode, function (code1) {\n                                    let url = \"https://ahoj.xyz/levelInfo/code1/\" + code1 + \"?lang=cn\";\n                                    Modal.alert('支付信息', <div>\n                                        <Iframe url={url}\n                                                width=\"100%\"\n                                                height=\"450px\"\n                                                display=\"initial\"\n                                                position=\"relative\"/>\n                                    </div>);\n                                });\n                            }\n                            }>支付信息</a> : <a onClick={() => {\n                                let url = \"https://ahoj.xyz/levelInfo/code2/\" + item.hcode + \"?lang=cn\";\n                                Modal.alert(language.e().order.tips8, <div>\n                                    <Iframe url={url}\n                                            width=\"100%\"\n                                            height=\"450px\"\n                                            display=\"initial\"\n                                            position=\"relative\"/>\n                                </div>);\n                            }}>{language.e().order.tips8}</a>\n                        }\n                         </span>\n                    </div>}/>\n                </Card>\n            </div>\n        });\n        return (\n            <div className=\"ui list\">{showOrders && showOrders.length > 0 ? showOrders :\n                <div style={{textAlign: 'center'}}>\n                    <Icon type=\"iconnodata-topic\" style={{width: \"100px\", height: \"100px\"}}/>\n                </div>}</div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport oAbi from \"./oabi\";\nimport {Modal, WhiteSpace} from \"antd-mobile\";\nimport {hash, randomByte32} from \"./common\";\nimport language from './language'\nimport * as cookie from \"react-cookies\";\n\nconst host = \"http://localhost:3000\";\n\nexport default class BasePage extends Component {\n\n    constructor(props, state) {\n        super(props);\n        this.state = Object.assign(state, {\n            pk: this.props.pk,\n            code: null,\n            pcode: null,\n            auditedStatus: 0\n        });\n    }\n\n    commitKyc(auditing, code) {\n        let self = this;\n        if (this.modal) {\n            return;\n        }\n        this.modal = Modal.alert(language.e().kyc.title2,\n            <div>\n                <div className=\"ui input\"><input type=\"text\" placeholder=\"name\"\n                                                 onChange={(event) => {\n                                                     self.nameValue.value = event.target.value;\n                                                 }}\n                                                 ref={el => self.nameValue = el}/></div>\n                <WhiteSpace/>\n                <div className=\"ui input\"><input type=\"text\" value={code}\n                                                 onChange={(event) => {\n                                                     self.codeValue.value = event.target.value;\n                                                 }}\n                                                 ref={el => self.codeValue = el}/></div>\n                <WhiteSpace/>\n            </div>,\n            [\n                {\n                    text: <span>{language.e().modal.cancel}</span>, onPress: () => {\n                        window.location.href = host;\n                    }\n                },\n                {\n                    text: <span>{language.e().modal.ok}</span>, onPress: () => {\n                        self.modal = null;\n                        let name = self.nameValue.value;\n                        let code1 = oAbi.code1(code);\n                        let code2 = oAbi.code2(code1);\n                        oAbi.pkrCrypto(self.state.pk, self.state.mainPKr, code, function (ecode) {\n                            if (auditing) {\n                                oAbi.auditor(self.state.mainPKr, function (auditor) {\n                                    oAbi.pkrEncrypt(auditor, code1, function (pcode) {\n                                        console.log(\"registerKyc\", auditor, code, code2, ecode, pcode);\n                                        oAbi.registerKyc(self.state.pk, self.state.mainPKr, name, code2, ecode, pcode, function (res, error) {\n                                            window.location.href = host;\n                                        });\n                                    });\n                                });\n                            } else {\n                                oAbi.registerKyc(self.state.pk, self.state.mainPKr, name, code2, ecode, \"0x\", function (res, error) {\n                                    window.location.href = host;\n                                });\n                            }\n                        });\n                    }\n                },\n            ])\n    }\n\n    kyc(auditing) {\n        let self = this;\n        if (!this.state.code) {\n            if (cookie.load('hasRegister')) {\n                Modal.alert(\"已提交请稍等\", \"\",\n                    [\n                        {text: <span>{language.e().modal.cancel}</span>},\n                        {\n                            text: <span>{language.e().modal.ok}</span>, onPress: () => {\n                            }\n                        },\n                    ])\n            } else {\n                Modal.alert(language.e().kyc.title1, language.e().kyc.msg1,\n                    [\n                        {text: <span>{language.e().modal.cancel}</span>},\n                        {\n                            text: <span>{language.e().modal.ok}</span>, onPress: () => {\n                                var urlenc;\n                                if (auditing) {\n                                    urlenc = encodeURIComponent(\"http://localhost:3000/?page=business&code=codeId\");\n                                } else {\n                                    urlenc = encodeURIComponent(\"http://localhost:3000/?page=customer&code=codeId\");\n                                }\n                                window.location.href = \"https://ahoj.xyz/profile?lang=cn&force=\" + this.state.code + \"&ref=\" + urlenc;\n                            }\n                        },\n                    ])\n            }\n\n        } else {\n            if (this.state.auditedStatus == 0) {\n                Modal.alert(language.e().kyc.title3, language.e().kyc.msg3,\n                    [\n                        {text: <span>{language.e().modal.cancel}</span>},\n                        {\n                            text: <span>{language.e().modal.ok}</span>, onPress: () => {\n                                oAbi.auditor(self.state.mainPKr, function (auditor) {\n                                    oAbi.pkrEncrypt(auditor, oAbi.code1(self.state.code), function (pcode) {\n                                        oAbi.needAuditing(self.state.pk, self.state.mainPKr, pcode);\n                                    });\n                                });\n                            }\n                        },\n                    ])\n            } else {\n                Modal.alert('', language.e().kyc.title4)\n            }\n        }\n    }\n\n\n    componentWillUnmount() {\n        if (this.timer) {\n            console.log(\"componentWillUnmount\", this.timer);\n            clearInterval(this.timer);\n        }\n        if (this.kycTimer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    componentDidMount() {\n        let url = document.URL;\n        let code0;\n        let index = url.indexOf(\"code=\");\n        if (index != -1) {\n            code0 = url.substring(index + 5).trim();\n        }\n\n        let self = this;\n        oAbi.init\n            .then(() => {\n                oAbi.accountDetails(this.state.pk, function (account) {\n                    oAbi.myKyc(account.pk, account.mainPKr, function (code, auditedStatus) {\n                        self.setState({mainPKr: account.mainPKr, code: code, auditedStatus: auditedStatus});\n                        if (self._componentDidMount) {\n                            self._componentDidMount(account.mainPKr, code);\n                        }\n\n                        if (!code) {\n                            self.kycTimer = setInterval(function () {\n                                oAbi.myKyc(account.pk, account.mainPKr, function (code, auditedStatus) {\n                                    self.setState({code: code, auditedStatus: auditedStatus});\n                                })\n                            }, 20 * 1000);\n                        }\n\n                        console.log(\"componentDidMount\", self)\n                        if (!code && code0 && !cookie.load('clear')) {\n                            if (url.indexOf(\"page=business\") != -1) {\n                                self.commitKyc(true, code0);\n                            } else {\n                                self.commitKyc(false, code0);\n                            }\n                        }\n                    });\n                });\n            });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.pk != this.props.pk) {\n            oAbi.accountDetails(nextProps.pk, function (account) {\n                oAbi.myKyc(account.pk, account.mainPKr, function (code, auditedStatus) {\n                    self.setState({\n                        pk: nextProps.pk,\n                        mainPKr: account.mainPKr,\n                        code: code,\n                        auditedStatus: auditedStatus\n                    });\n                    self.init(account.mainPKr);\n                })\n            });\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Button, Modal, Toast, WhiteSpace, Card, Icon, Flex, List, Radio} from \"antd-mobile\";\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from '../oabi'\nimport BigNumber from \"bignumber.js\";\nimport {randomByte32, showValue} from \"../common\";\nimport BasePage from \"../basepage\";\nimport language from '../language'\nimport Iframe from \"react-iframe\";\n\nconst alert = Modal.alert;\n\nconst values = [100, 200, 500, 1000, 5000, 10000, 30000];\n\nexport class MarketOrders extends BasePage {\n    constructor(props) {\n        super(props, {\n            sellOrders: [],\n            buyOrders: [],\n            token: oAbi.tokenList(0)[0],\n            unit: 0,\n            showSelect: false,\n            showPopup: false,\n            payType: 0,\n            popup: \"\",\n            pkr: \"\",\n            id: \"\",\n            maxValue:0\n        });\n    }\n\n    _componentDidMount(mainPKr) {\n        let self = this;\n        self.init(mainPKr, this.state.token);\n\n        if (!self.timer) {\n            self.timer = setInterval(function () {\n                self.init();\n            }, 20 * 1000);\n        }\n    }\n\n    init(mainPKr, token, unit) {\n        let self = this;\n        if (!mainPKr) {\n            mainPKr = this.state.mainPKr;\n        }\n        if (!token) {\n            token = this.state.token;\n        }\n        if (unit == undefined) {\n            unit = this.state.unit;\n        }\n        if (!token) {\n            return;\n        }\n\n        console.log(\"businessOrderList\", mainPKr, token, unit);\n        oAbi.businessOrderList(mainPKr, token, unit, false, function (orders) {\n\n            let ids = [];\n            let sellOrders = [];\n            let buyOrders = [];\n\n            if (orders.length > 0) {\n                orders = orders.filter(function (item) {\n                    return item.order.status == 0 && new BigNumber(item.order.value).comparedTo(new BigNumber(item.order.dealtValue)) > 0;\n                });\n\n\n                orders.forEach(item => {\n                    item.pkr = \"0x\" + item.order.owner.slice(-40);\n                    ids.push(item.pkr);\n                });\n\n                oAbi.getFullAddress(ids, function (ret) {\n                    orders.forEach(item => {\n                        item.pkr = ret.result[item.pkr];\n                        if (item.order.orderType == 0) {\n                            buyOrders.push(item);\n                        } else {\n                            sellOrders.push(item);\n                        }\n                    });\n                    self.setState({sellOrders: sellOrders, buyOrders: buyOrders});\n                });\n            } else {\n                self.setState({sellOrders: sellOrders, buyOrders: buyOrders});\n            }\n        });\n    }\n\n    createOrder(pkr, orderId, amount, payType) {\n        let self = this;\n        let orderType = this.props.orderType;\n        oAbi.pkrEncrypt(pkr, oAbi.code1(self.state.code), function (mcode) {\n            if (orderType == 0) {\n                oAbi.exchangeBuy(self.state.pk, self.state.mainPKr, mcode, orderId, amount, payType);\n            } else {\n                oAbi.exchangeSell(self.state.pk, self.state.mainPKr, mcode, orderId, self.state.token, amount, payType);\n            }\n        });\n    }\n\n    render() {\n        let tabList = oAbi.tokenList(this.state.unit).map((item, index) => {\n            return <div className=\"item\" key={index}>\n                <a style={this.state.token == item ? {fontWeight: 'bold', color: 'black'} : {}} onClick={() => {\n                    this.setState({token: item});\n                    this.init(this.state.mainPKr, item);\n                }}>{item\n                }</a>\n            </div>\n        });\n\n        let orderType = this.props.orderType;\n        let orders;\n        if (orderType == 1) {\n            orders = this.state.buyOrders;\n        } else {\n            orders = this.state.sellOrders;\n        }\n        let self = this;\n        let showOrders = orders.map((item, index) => {\n            let value = item.order.value - item.order.dealtValue - item.order.lockinValue;\n            return (\n                <div className=\"item\" key={index}>\n                    <Card>\n                        <Card.Header\n                            title={item.name}\n                            extra={<span onClick={() => {\n                                let url = \"https://ahoj.xyz/levelInfo/code2/\" + item.hcode + \"?lang=cn\";\n                                alert(language.e().order.tips8, <Iframe url={url}\n                                                      width=\"100%\"\n                                                      height=\"450px\"\n                                                      display=\"initial\"\n                                                      position=\"relative\"/>\n                                )\n                            }}>{language.e().order.tips8}</span>}\n                        />\n                        <Card.Body>\n                            <Flex>\n                                <Flex.Item>\n                                    <div style={{\n                                        fontSize: \"14px\",\n                                        fontWeight: \"800\"\n                                    }}>{showValue(item.order.price, 9, 4)} {oAbi.unitName(self.state.unit)}\n                                    </div>\n                                </Flex.Item>\n\n                                <Flex.Item style={{textAlign: 'right'}}>\n                                    <a onClick={() => {\n                                        let payMethods = []\n                                        oAbi.getPayTypes(item.hcode, function (list) {\n                                            list.forEach((item) => {\n                                                payMethods.push(<Flex>\n                                                    <Flex.Item>{item.type}</Flex.Item>\n                                                    <Flex.Item>{item.account}</Flex.Item>\n                                                    <Flex.Item>{item.channel}</Flex.Item>\n                                                </Flex>)\n                                            });\n                                            Modal.alert(\"\", payMethods);\n                                        })\n                                    }}>\n                                        支付方式\n                                    </a>\n                                </Flex.Item>\n                            </Flex>\n                        </Card.Body>\n                        <Card.Footer content={\n                            <div>\n                                <div>数量: {showValue(value, 18, 4)}</div>\n                                <div>限额: {showValue(item.order.minDealValue, 18, 0)}-{showValue(item.order.maxDealValue, 18, 4)}</div>\n                            </div>\n                        } extra={\n                            <Button type=\"ghost\" inline size=\"small\" style={{marginRight: '4px'}}\n                                    onClick={() => {\n                                        if (this.state.auditedStatus == 0) {\n                                            this.kyc(false);\n                                        } else {\n                                            oAbi.getPayTypes(item.hcode, function (list) {\n                                                let payTypes = list.map((each, index) => {\n                                                    return <Radio.RadioItem key={index}\n                                                                            checked={self.state.payType === index}\n                                                                            onChange={() => {\n                                                                                self.setState({payType: index});\n                                                                            }}>\n                                                        {each.type + \" \" + each.channel + \" \" + each.account}\n                                                    </Radio.RadioItem>\n                                                });\n                                                self.setState({\n                                                    payTypes: payTypes, showPopup: true, id: item.id, pkr: item.pkr,\n                                                    maxValue: item.order.value - item.order.dealtValue\n                                                });\n                                            });\n                                        }\n\n                                    }}>\n                                {orderType == 1 ? language.e().order.sell : language.e().order.buy}\n                            </Button>\n                        }/>\n                    </Card>\n                </div>\n            )\n        });\n\n        return (\n            <div>\n                <div>\n                    <Modal\n                        popup\n                        visible={this.state.showPopup}\n                        animationType=\"slide-up\"\n                    >\n                        <List renderHeader={() => <div>委托买入</div>} className=\"popup-list\">\n\n                            <List.Item>\n                                <div>\n                                    <select className=\"ui selection dropdown\"\n                                            ref={el => this.amountValue = el}\n                                            onChange={(e) => {\n                                                this.amountValue.value = e.target.value;\n                                            }}>\n                                        <option key={0} value={100}>100</option>\n                                        <option key={0} value={200}>200</option>\n                                        <option key={0} value={500}>500</option>\n                                        <option key={0} value={1000}>1000</option>\n                                        <option key={0} value={5000}>5000</option>\n                                        <option key={0} value={10000}>10000</option>\n                                        <option key={0} value={30000}>30000</option>\n                                    </select>\n                                </div>\n                            </List.Item>\n                            {this.state.payTypes}\n                            <List.Item>\n                                <Button type=\"primary\" onClick={() => {\n                                    let amount = new BigNumber(this.amountValue.value).multipliedBy(new BigNumber(10).pow(18)).toNumber();\n                                    if (amount == 0) {\n                                        Toast.fail(\"输入金额为0\");\n                                        return;\n                                    }\n                                    if (amount > this.state.maxValue) {\n                                        Toast.fail(\"超出可交易范围!\");\n                                        return;\n                                    }\n                                    self.createOrder(this.state.pkr, this.state.id, this.amountValue.value, this.state.payType);\n                                    self.setState({showPopup: false});\n                                }}>\n                                    {orderType == 1 ? language.e().order.sell : language.e().order.buy}\n                                </Button>\n                            </List.Item>\n                        </List>\n                    </Modal>\n                </div>\n\n\n                <WhiteSpace/>\n                <div className=\"ui breadcrumb\">\n                    <div className=\"section\">\n                        <div className=\"ui dropdown\" ref={el => this.dropdown = el}\n                             onClick={() => {\n                                 this.setState({showSelect: true});\n                                 this.dropdown.className = \"ui dropdown active visible\";\n                                 this.menu.className = \"menu transition visible\";\n                             }}>\n                            <div className=\"text\">{oAbi.unitName(this.state.unit)}</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu transition hidden\" ref={el => this.menu = el}>\n                                <div className=\"item\" onClick={(e) => {\n                                    this.dropdown.className = \"ui dropdown \";\n                                    this.menu.className = \"menu transition hidden\";\n                                    this.setState({unit: 0, showSelect: false});\n                                    this.init(this.state.mainPKr, null, 0);\n                                    e.stopPropagation()\n                                }}>CNY\n                                </div>\n                                <div className=\"item\" onClick={(e) => {\n                                    this.dropdown.className = \"ui dropdown \";\n                                    this.menu.className = \"menu transition hidden\";\n                                    this.setState({unit: 1, showSelect: false});\n                                    this.init(this.state.mainPKr, null, 1);\n                                    e.stopPropagation();\n                                }}>USD\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"divider\">&nbsp;&nbsp;&nbsp;&nbsp;</div>\n                    <div className=\"section\">\n                        <div className=\"ui small horizontal divided list\">\n                            {tabList}\n                        </div>\n                    </div>\n                </div>\n\n                <h4 className=\"ui dividing header\">\n                    市场挂单\n                </h4>\n                {orders.length > 0 ?\n                    <div className=\"ui list\">{showOrders}</div> :\n                    <div style={{textAlign: 'center'}}>\n                        <Icon type=\"iconnodata-topic\" style={{width: \"100px\", height: \"100px\"}}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Button, Flex, List, Modal, Toast, WhiteSpace} from \"antd-mobile\";\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from '../oabi'\nimport {showValue} from \"../common\";\nimport BigNumber from \"bignumber.js\";\nimport BasePage from \"../basepage\";\n\nexport class PlaceOrder extends BasePage {\n    constructor(props) {\n        super(props, {\n            sellOrders: [],\n            buyOrders: [],\n            token: oAbi.tokenList()[0],\n            unit: 0\n        });\n    }\n\n    _componentDidMount(mainPKr) {\n        let self = this;\n        self.init(mainPKr, this.state.token);\n        if(!self.timer) {\n            self.timer = setInterval(function () {\n                self.init();\n            }, 20 * 1000);\n        }\n    }\n\n    _componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.orderType != this.props.orderType) {\n            this.setState({orderType: nextProps.orderType});\n        }\n    }\n\n    init(mainPKr, token, unit) {\n        if (!mainPKr) {\n            mainPKr = this.state.mainPKr;\n        }\n        if (!token) {\n            token = this.state.token;\n        }\n        if (unit == undefined) {\n            unit = this.state.unit;\n        }\n        if (!token) {\n            return;\n        }\n\n        let self = this;\n        oAbi.init\n            .then(() => {\n                console.log(\"businessOrders\", unit);\n                oAbi.businessOrderList(mainPKr, token, unit, false, function (orders) {\n                    let sellOrders = [];\n                    let buyOrders = [];\n\n                    orders = orders.filter(function (item) {\n                        return item.order.status == 0 && new BigNumber(item.order.value).comparedTo(new BigNumber(item.order.dealtValue)) > 0;\n                    });\n\n                    orders.forEach(item => {\n                        if (item.order.orderType == 0) {\n                            buyOrders.push(item);\n                        } else {\n                            sellOrders.push(item);\n                        }\n                    });\n                    self.setState({sellOrders: sellOrders, buyOrders: buyOrders});\n                });\n            })\n    }\n\n    render() {\n        let orderType = this.props.orderType;\n        let showOrders;\n        let price;\n        if (orderType == 0) {\n            price = 1;\n            showOrders = this.state.buyOrders;\n        } else {\n            price = 1.005\n            showOrders = this.state.sellOrders;\n        }\n\n        let orders = showOrders.map((item, index) => {\n            return <List.Item key={index}>\n                <Flex style={{fontSize:\"12px\",fontWeight:\"800\"}}>\n                    <Flex.Item>{showValue(item.order.price, 9, 4)}</Flex.Item>\n                    <Flex.Item>{showValue(item.order.value - item.order.dealtValue - item.order.lockinValue, 18, 4)}</Flex.Item>\n                    <Flex.Item>{showValue(item.order.minDealValue, 18, 4)}-{showValue(item.order.maxDealValue, 18, 4)}</Flex.Item>\n                </Flex>\n            </List.Item>\n        });\n        let tabList = oAbi.tokenList(this.state.unit).map((item, index) => {\n            return <div className=\"item\" key={index}>\n                <a style={this.state.token == item ? {fontWeight: 'bold', color: 'black'} : {}} onClick={() => {\n                    this.setState({token: item});\n                    this.init(this.state.mainPKr, item);\n                }}>{item}</a>\n            </div>\n        });\n        return (\n            <div className=\"ui segment\">\n                <div className=\"ui breadcrumb\">\n                    <div className=\"section\">\n                        <div className=\"ui dropdown\" ref={el => this.dropdown = el}\n                             onClick={() => {\n                                 this.setState({showSelect: true});\n                                 this.dropdown.className = \"ui dropdown active visible\";\n                                 this.menu.className = \"menu transition visible\";\n                             }}>\n                            <div className=\"text\">{oAbi.unitName(this.state.unit)}</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu transition hidden\" ref={el => this.menu = el}>\n                                <div className=\"item\" onClick={(e) => {\n                                    this.dropdown.className = \"ui dropdown \";\n                                    this.menu.className = \"menu transition hidden\";\n                                    this.setState({unit: 0, showSelect: false});\n                                    this.init(this.state.mainPKr, null, 0);\n                                    e.stopPropagation()\n                                }}>CNY\n                                </div>\n                                <div className=\"item\" onClick={(e) => {\n                                    this.dropdown.className = \"ui dropdown \";\n                                    this.menu.className = \"menu transition hidden\";\n                                    this.setState({unit: 1, showSelect: false});\n                                    this.init(this.state.mainPKr, null, 1);\n                                    e.stopPropagation();\n                                }}>USD\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"divider\">&nbsp;&nbsp;&nbsp;&nbsp;</div>\n                    <div className=\"section\">\n                        <div className=\"ui small horizontal divided list\">\n                            {tabList}\n                        </div>\n                    </div>\n                </div>\n\n                <WhiteSpace/>\n                <div className=\"ui icon input\" style={{width: \"100%\"}}>\n                    <input disabled={true} type=\"text\" placeholder=\"Price\" ref={el => this.priceValue = el}\n                           value={price}\n                           onChange={(event) => {\n                               let value = event.target.value;\n                               if (value) {\n                                   value = (value.match(/^\\d*(\\.?\\d{0,4})/g)[0]) || null\n                               }\n                               // this.priceValue.value = value;\n                           }}/>\n                    <i className=\"icon\" style={{top: '12px',color:\"#000\"}}>{oAbi.unitName(this.state.unit)}</i>\n                </div>\n                <WhiteSpace/>\n                <div className=\"ui icon input\" style={{width: \"100%\"}}>\n                    <input type=\"text\" placeholder=\"Amount\" ref={el => this.countValue = el}\n                           onChange={(event) => {\n                               let value = event.target.value;\n                               if (value) {\n                                   value = (value.match(/^\\d*(\\.?\\d{0,4})/g)[0]) || null\n                               }\n                               this.countValue.value = value;\n                               this.minValue.value = 0;\n                               this.maxValue.value = value;\n                           }}/>\n                    <i className=\"icon\" style={{top: '12px',color:\"#000\"}}>{this.state.token}</i>\n                </div>\n                <WhiteSpace/>\n                <Flex style={{textAlign: \"center\"}}>\n                    <Flex.Item>\n                        <div className=\"ui icon input\" style={{width: \"100%\"}}>\n                            <input disabled={true} type=\"text\" placeholder=\"MIN\" style={{paddingRight: \"10px\"}}\n                                   ref={el => this.minValue = el} onChange={(event) => {\n                                let value = event.target.value;\n                                if (value) {\n                                    value = (value.match(/^\\d*(\\.?\\d{0,4})/g)[0]) || null\n                                }\n                                this.minValue.value = value;\n                            }}/>\n                            <i className=\"icon\" style={{top: '12px',color:\"#000\"}}>{this.state.token}</i>\n                        </div>\n                    </Flex.Item>\n                    <Flex.Item>\n                        <div className=\"ui icon input\" style={{width: \"100%\"}}>\n                            <input disabled={true} type=\"text\" placeholder=\"MAX\" style={{paddingLeft: \"10px\"}}\n                                   ref={el => this.maxValue = el} onChange={(event) => {\n                                let value = event.target.value;\n                                if (value) {\n                                    value = (value.match(/^\\d*(\\.?\\d{0,4})/g)[0]) || null\n                                }\n                                this.maxValue.value = value;\n                            }}/>\n                            <i className=\"icon\" style={{top: '12px',color:\"#000\"}}>{this.state.token}</i>\n                        </div>\n                    </Flex.Item>\n\n                </Flex>\n                <WhiteSpace/>\n                <Flex>\n                    <Flex.Item>\n                        <Button type={orderType == 0?\"primary\":\"warning\"} onClick={() => {\n                            if (this.state.auditedStatus != 2) {\n                                this.kyc(true);\n                            } else {\n                                if (!this.countValue.value) {\n                                    Toast.fail(\"请填写金额！\")\n                                    return;\n                                }\n\n                                if (!this.priceValue.value) {\n                                    Toast.fail(\"请填写价格！\")\n                                    return;\n                                }\n\n                                let value = new BigNumber(this.countValue.value).multipliedBy(new BigNumber(10).pow(18));\n                                let min = new BigNumber(this.minValue.value).multipliedBy(new BigNumber(10).pow(18));\n                                let max = new BigNumber(this.maxValue.value).multipliedBy(new BigNumber(10).pow(18));\n                                let price = new BigNumber(this.priceValue.value).multipliedBy(1000000000);\n\n                                if (price.isZero()) {\n                                    Toast.fail(\"price is zero\")\n                                    return;\n                                }\n\n                                if (value.isZero()) {\n                                    Toast.fail(\"value is zero\")\n                                    return;\n                                }\n\n                                if (max.isZero()) {\n                                    Toast.fail(\"max is zero\")\n                                    return;\n                                }\n\n                                if (min.comparedTo(max) > 0) {\n                                    Toast.fail(\"min must <= max\")\n                                    return;\n                                }\n\n                                if (max.comparedTo(value) > 0) {\n                                    Toast.fail(\"max must <= amount\")\n                                    return;\n                                }\n\n                                if (orderType === 1) {\n                                    oAbi.businessSell(this.state.pk, this.state.mainPKr, this.state.token, value, min, max, price, this.state.unit);\n                                } else {\n                                    oAbi.businessBuy(this.state.pk, this.state.mainPKr, this.state.token, value, min, max, price, this.state.unit);\n                                }\n                            }\n                        }}>{orderType == 0 ? \"立即买入\" : \"立即卖出\"}</Button>\n                    </Flex.Item>\n                </Flex>\n                {showOrders.length > 0 && <List renderHeader={() => '市场挂单'}>\n                    {orders}\n                </List>}\n\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from '../oabi'\nimport {Brief, Button, Card, Flex, Icon, List, Modal, Radio, WhiteSpace} from \"antd-mobile\";\nimport {bytes32ToToken, randomByte32, showValue, formatDate} from \"../common\";\nimport BigNumber from 'bignumber.js'\nimport language from '../language'\nimport Iframe from \"react-iframe\";\n\nconst alert = Modal.alert;\n\nexport class UserOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pk: localStorage.getItem(\"PK\"),\n            mainPKr: localStorage.getItem(\"MAINPKR\"),\n            orders: []\n        };\n    }\n\n    componentDidMount() {\n        let self = this;\n        oAbi.userOrderListByBId(this.state.mainPKr, this.props.orderId, function (orders) {\n            orders.sort(function (a, b) {\n                return b.order.updateTime - a.order.updateTime;\n            });\n\n            if (orders.length > 0) {\n                let pkrs = [];\n                orders.forEach(item => {\n                    item.pkr = \"0x\" + item.order.owner.slice(-40);\n                    pkrs.push(item.pkr);\n                });\n\n                oAbi.getFullAddress(pkrs, function (rets) {\n                    orders.forEach(item => {\n                        item.pkr = rets.result[item.pkr];\n                    });\n                });\n            }\n            self.setState({orders: orders});\n        })\n    }\n\n    render() {\n        let self = this;\n        let code = this.props.code;\n\n        let ordersHtml = this.state.orders.map((child, index) => {\n            let html;\n            if (child.order.status == 1) {\n                html = <div style={{textAlign: 'right'}}>\n                    <a onClick={() => {\n                        alert(language.e().order.confirm + \"/\" + language.e().order.refuse,\n                            <Flex>\n                                <Flex.Item style={{textAlign: \"right\"}}>\n                                    <div className=\"ui radio checkbox\">\n                                        <input type=\"radio\" ref={el => this.conform = el} name=\"op\"\n                                               checked=\"checked\" onChange={() => {\n                                        }}/>\n                                        <label>{language.e().order.confirm}</label>\n                                    </div>\n                                </Flex.Item>\n                                <Flex.Item>\n                                    <div className=\"ui radio checkbox\">\n                                        <input type=\"radio\" ref={el => this.refuse = el} name=\"op\"\n                                               onChange={() => {\n                                               }}/>\n                                        <label>{language.e().order.refuse}</label>\n                                    </div>\n                                </Flex.Item>\n                            </Flex>\n                            , [\n                                {text: language.e().modal.cancel, onPress: () => console.log('cancel')},\n                                {\n                                    text: language.e().modal.ok, onPress: () => {\n                                        if (this.conform.checked) {\n                                            oAbi.pkrEncrypt(child.pkr, oAbi.code1(code), function (mcode) {\n                                                oAbi.confirmed(self.state.pk, self.state.mainPKr, child.id, mcode);\n                                            });\n                                        } else {\n                                            oAbi.refused(self.state.pk, self.state.mainPKr, child.id);\n                                        }\n                                    }\n                                },\n                            ]);\n                    }}>\n                        {language.e().order.op}\n                    </a>\n                </div>\n            } else if (child.order.status == 2) {\n                let value = new BigNumber(child.order.price).multipliedBy(child.order.value).dividedBy(new BigNumber(10).pow(27)).toNumber();\n                if (child.order.orderType == 1) {\n                    if (parseInt(new Date().getTime() / 1000) - child.order.updateTime < 24 * 60 * 60) {\n                        html =\n                            <span>{language.e().order.tips2_0},{value} CNY</span>\n                    } else {\n                        html = <span>超时放行,<a onClick={() => {\n                            alert(\"结束订单\", <span>ID:{child.id}</span>, [\n                                {text: language.e().modal.cancel, onPress: () => console.log('cancel')},\n                                {\n                                    text: language.e().modal.ok, onPress: () => {\n                                        oAbi.finished(self.state.pk, self.state.mainPKr, child.id);\n                                    }\n                                },\n                            ]);\n                        }}>完成</a></span>\n                    }\n                } else {\n                    if (parseInt(new Date().getTime() / 1000) - child.order.updateTime > 24 * 60 * 60) {\n                        html =\n                            <span>{language.e().order.tips2_4},<a onClick={() => {\n                                alert(\"请确认未收到付款!\", <span>应收:{value} CNY</span>, [\n                                    {\n                                        text: language.e().modal.cancel, onPress: () => {\n                                        }\n                                    },\n                                    {\n                                        text: language.e().modal.ok, onPress: () => {\n                                            oAbi.refused(self.state.pk, self.state.mainPKr, child.id);\n                                        }\n                                    }\n                                ])\n                            }}\n                            >取消</a></span>\n                    } else {\n                        html = <span>{language.e().order.tips2_1}{value}CNY,<a onClick={() => {\n\n                            alert(language.e().order.tips2_3, <span>应收:{value} CNY</span>, [\n                                {\n                                    text: language.e().modal.cancel, onPress: () => {\n                                    }\n                                },\n                                {\n                                    text: language.e().modal.ok, onPress: () => {\n                                        oAbi.finished(self.state.pk, self.state.mainPKr, child.id);\n                                    }\n                                },\n                            ]);\n                        }}>{language.e().order.pass}</a>\n                            </span>\n                    }\n                }\n            } else {\n                let text;\n                if (child.order.status == 3) {\n                    text = language.e().order.tips3;\n                } else if (child.order.status == 4) {\n                    text = language.e().order.tips4;\n                } else if (child.order.status == 5) {\n                    text = language.e().order.tips5;\n                } if (child.order.status == 6) {\n                    text = \"仲裁中\"\n                }\n                html = <span>{text}</span>\n            }\n\n            return <div key={index}>\n                <Card>\n                    <Card.Header\n                        title={<span>订单号:{child.id}</span>}\n                        extra={html}\n                    />\n                    <Card.Body>\n                        <div>\n                            <Flex style={{fontSize: '14px'}}>\n                                <Flex.Item style={{flex: 1}}>{showValue(child.order.price, 9, 4)}</Flex.Item>\n                                <Flex.Item style={{flex: 1}}>{showValue(child.order.value, 18, 4)}</Flex.Item>\n                            </Flex>\n                        </div>\n                    </Card.Body>\n                    <Card.Footer content={formatDate(new Date(child.order.updateTime * 1000))} extra={<span>\n                        <a onClick={() => {\n                            console.log(\"child.mcode\", child.mcode);\n                            oAbi.pkrDecrypt(self.state.pk, child.mcode, function (code1) {\n                                if (oAbi.code2(code1) === child.hcode) {\n                                    let url = \"https://ahoj.xyz/levelInfo/code1/\" + code1 + \"?lang=cn\";\n                                    Modal.alert('', <Iframe url={url}\n                                                            width=\"100%\"\n                                                            height=\"450px\"\n                                                            display=\"initial\"\n                                                            position=\"relative\"/>);\n                                }\n                            });\n                        }}>支付信息</a>\n                    </span>}/>\n                </Card>\n                <WhiteSpace size=\"sm\"/>\n            </div>\n\n        });\n        let back = this.props.back;\n\n        return (\n            <div>\n                <div>\n                    <Button onClick={() => {\n                        back();\n                    }}>返回</Button><WhiteSpace/>\n                </div>\n                {ordersHtml}\n            </div>\n\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from '../oabi'\nimport {Brief, Button, Card, Flex, Icon, List, Modal, Radio, WhiteSpace} from \"antd-mobile\";\nimport {bytes32ToToken, randomByte32, showValue, formatDate} from \"../common\";\nimport BasePage from \"../basepage\";\nimport BigNumber from 'bignumber.js'\nimport language from '../language'\nimport {UserOrders} from \"./userorders\";\n\nconst alert = Modal.alert;\n\nexport class BOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pk: this.props.pk,\n            orders: [],\n            orderId: null\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.pk != this.props.pk) {\n            oAbi.accountDetails(nextProps.pk, function (account) {\n                oAbi.myKyc(account.pk, account.mainPKr, function (code) {\n                    self.setState({pk: nextProps.pk, mainPKr: account.mainPKr, code: code});\n                    self.init(account.mainPKr);\n                })\n            });\n        }\n    }\n\n    componentDidMount() {\n        let self = this;\n        oAbi.init\n            .then(() => {\n                oAbi.accountDetails(this.state.pk, function (account) {\n                    oAbi.myKyc(account.pk, account.mainPKr, function (code) {\n                        self.setState({pk: account.pk, mainPKr: account.mainPKr, code: code});\n                        self.init(account.mainPKr);\n                        if(!self.timer) {\n                            self.timer = setInterval(function () {\n                                self.init();\n                            }, 20 * 1000);\n                        }\n                    });\n                });\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    init(mainPKr) {\n        let self = this;\n        if (!mainPKr) {\n            mainPKr = this.state.mainPKr;\n        }\n        oAbi.businessOrderList(mainPKr, \"\", 0, true, function (orders) {\n            if (orders) {\n                orders.sort(function (a, b) {\n                    return b.order.timestemp - a.order.timestemp;\n                });\n                self.setState({orders: orders});\n            } else {\n                self.setState({orders: []});\n            }\n        });\n    }\n\n    back() {\n        this.setState({orderId: null});\n    }\n\n    render() {\n        let self = this;\n        let orders = this.state.orders.map((item, index) => {\n            // let num = 0;\n            let canCancel = true;\n            let underway = item.order.status == 0 && new BigNumber(item.order.value).comparedTo(new BigNumber(item.order.dealtValue)) > 0;\n            let status = \"进行中\";\n            if (!underway) {\n                canCancel = false;\n                status = item.order.status == 4 ? \"已取消\" : \"已完成\";\n            }\n\n            return <div className=\"item\" key={index}>\n                <Flex style={{fontSize: '12px'}}>\n                    <Flex.Item\n                        style={{flex: 1}}>{item.id}</Flex.Item>\n                    <Flex.Item\n                        style={{flex: 2}}>{item.order.orderType == 0 ? language.e().order.buy : language.e().order.sell}{bytes32ToToken(item.order.token)}</Flex.Item>\n                    <Flex.Item style={{flex: 1}}>{showValue(item.order.price, 9, 4)}  {oAbi.unitName(item.order.unit)}</Flex.Item>\n                    <Flex.Item style={{flex: 1}}>{showValue(item.order.value, 18, 4)}</Flex.Item>\n                    <Flex.Item style={{flex: 1}}>\n                        {\n                            canCancel ? <a onClick={() => {\n                                alert(language.e().order.cancel, <span>ID:{item.id}</span>, [\n                                    {text: language.e().modal.cancel, onPress: () => console.log('cancel')},\n                                    {\n                                        text: language.e().modal.ok, onPress: () => {\n                                            oAbi.businessCancel(this.state.pk, this.state.mainPKr, item.id);\n                                        }\n                                    },\n                                ])\n                            }\n                            }>撤消</a> : status\n                        }\n                    </Flex.Item>\n                    <Flex.Item style={{flex: 1}}>{item.underwayCount}</Flex.Item>\n                    <Flex.Item style={{flex: 1, textAlign: 'right'}}><a onClick={() => {\n                        self.setState({orderId: item.id});\n                    }}><Icon type=\"right\"/></a></Flex.Item>\n                </Flex>\n            </div>\n        });\n\n        return (\n            <div className=\"ui segment\">\n                {\n                    this.state.orderId != null ? <UserOrders orderId={this.state.orderId} back={this.back.bind(this)} code={this.state.code}/> :\n                        <div className=\"ui list\">\n                            <div className=\"item\">\n                                <Flex style={{fontSize: '12px', fontWeight: 'bold'}}>\n                                    <Flex.Item\n                                        style={{flex: 1}}>ID</Flex.Item>\n                                    <Flex.Item\n                                        style={{flex: 2}}>{language.e().order.orderType}</Flex.Item>\n                                    <Flex.Item style={{flex: 1}}>{language.e().order.price}</Flex.Item>\n                                    <Flex.Item style={{flex: 1}}>{language.e().order.amount}</Flex.Item>\n                                    <Flex.Item style={{flex: 1}}>状态</Flex.Item>\n                                    <Flex.Item style={{flex: 1}}>交易</Flex.Item>\n                                    <Flex.Item style={{flex: 1}}></Flex.Item>\n                                </Flex>\n                            </div>\n                            {\n                                orders && orders.length > 0 ? orders :\n                                    <div className=\"item\" style={{textAlign: 'center'}}>\n                                        <Icon type=\"iconnodata-topic\" style={{width: \"100px\", height: \"100px\"}}/>\n                                    </div>\n                            }\n                        </div>\n                }\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {WingBlank, SegmentedControl, NavBar, Icon, Tabs, Modal, WhiteSpace} from \"antd-mobile\";\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport oAbi from './component/oabi'\nimport {showPK} from \"./component/common\";\nimport {AuditingList} from \"./component/auditing\";\nimport {COrders} from \"./component/consumer/corders\";\nimport {MarketOrders} from \"./component/consumer/marketorders\";\nimport {PlaceOrder} from \"./component/business/placeorder\";\nimport {BOrders} from \"./component/business/borders\";\n\nconst operation = Modal.operation;\n\nconst tabs0 = [\n    {title: \"买入\", showType: 0},\n    {title: \"卖出\", showType: 1},\n    {title: \"订单\", showType: 2},\n];\n\nconst tabs1 = [\n    {title: \"商家买入\", showType: 0},\n    {title: \"商家卖出\", showType: 1},\n    {title: \"商家订单\", showType: 2},\n];\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        let selectedIndex = 0;\n        if (document.URL.indexOf(\"page=business\") != -1) {\n            selectedIndex = 1;\n        }\n        this.state = {\n            name: localStorage.getItem(\"NAME\"),\n            pk: localStorage.getItem(\"PK\"),\n            mainPKr: localStorage.getItem(\"MAINPKR\"),\n            selectedIndex: selectedIndex,\n            showType: 0,\n            isOwner: false,\n            origin:true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount\");\n        let self = this;\n\n        oAbi.init\n            .then(() => {\n                let pk = localStorage.getItem(\"PK\");\n                if (!pk) {\n                    oAbi.accountList(function (accounts) {\n                        localStorage.setItem(\"PK\", accounts[0].pk);\n                        localStorage.setItem(\"MAINPKR\", accounts[0].mainPKr);\n                        localStorage.setItem(\"NAME\", accounts[0].name);\n                        oAbi.auditor(accounts[0].pk, function (owner) {\n                            self.setState({\n                                pk: accounts[0].pk,\n                                mainPKr: accounts[0].mainPKr,\n                                isOwner: accounts[0].mainPKr == owner\n                            });\n                        });\n                    });\n                } else {\n                    let mainPKr = localStorage.getItem(\"MAINPKR\");\n                    let name = localStorage.getItem(\"NAME\");\n                    oAbi.auditor(mainPKr, function (owner) {\n                        self.setState({pk: pk, mainPKr: mainPKr, name: name, isOwner: mainPKr == owner});\n                    });\n                }\n            })\n    }\n\n    changAccount() {\n        let self = this;\n        oAbi.init\n            .then(() => {\n                oAbi.accountList(function (accounts) {\n                    let actions = [];\n                    accounts.forEach(function (account, index) {\n                        actions.push(\n                            {\n                                text: <span>{account.name + \":\" + showPK(account.pk)}</span>, onPress: () => {\n                                    oAbi.auditor(account.mainPKr, function (owner) {\n                                        self.setState({isOwner: account.mainPKr == owner});\n                                    });\n                                    self.setState({\n                                        pk: account.pk,\n                                        name: account.name,\n                                        mainPKr: account.mainPKr,\n\n                                    });\n                                    localStorage.setItem(\"NAME\", account.name);\n                                    localStorage.setItem(\"PK\", account.pk);\n                                    localStorage.setItem(\"MAINPKR\", account.mainPKr);\n                                }\n                            }\n                        );\n                    });\n                    operation(actions);\n                });\n            })\n    }\n\n    renderContent(showType) {\n        if (this.state.selectedIndex == 0) {\n            if (showType == 2) {\n                return <COrders pk={this.state.pk}/>;\n            } else {\n                return <MarketOrders pk={this.state.pk} orderType={showType}/>\n            }\n        } else {\n            if (showType == 2) {\n                return <BOrders pk={this.state.pk}/>;\n            } else {\n                return <PlaceOrder pk={this.state.pk} orderType={showType}/>\n            }\n        }\n    }\n\n    render() {\n        return (\n            <WingBlank>\n                <NavBar\n                    mode=\"light\"\n                    rightContent={[\n                        <span key=\"2\">{this.state.name}</span>,\n                        <Icon key=\"1\" type=\"iconaccount\" className=\"text-black\" onClick={this.changAccount.bind(this)}/>\n                    ]}\n                >\n                    <SegmentedControl\n                        values={['个人', '商家']}\n                        tintColor={'#000'}\n                        style={{width: '150px'}}\n                        selectedIndex={this.state.selectedIndex}\n                        onValueChange={() => {\n                            console.log(\"SegmentedControl\", this.state.showType, this.state.selectedIndex);\n                            this.setState({origin:false, selectedIndex: (this.state.selectedIndex + 1) % 2})\n                        }}\n                    />\n                </NavBar>\n\n                <div>\n                    {\n                        this.state.selectedIndex == 0 ?\n                            <Tabs tabs={tabs0}\n                                  swipeable={false}\n                                  initialPage={0}\n                                  onChange={(tab, index) => {\n                                      this.setState({showType: tab.showType})\n                                  }}\n                            >\n                            </Tabs> :\n                            <Tabs tabs={tabs1}\n                                  swipeable={false}\n                                  initialPage={0}\n                                  onChange={(tab, index) => {\n                                      this.setState({showType: tab.showType})\n                                  }}\n                            >\n                            </Tabs>\n                    }\n                    {\n                        this.renderContent(this.state.showType)\n                    }\n\n                </div>\n                <WhiteSpace/>\n                {\n                    this.state.isOwner && <AuditingList/>\n                }\n            </WingBlank>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}